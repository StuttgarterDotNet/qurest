//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.0.502.0.
namespace QuRest.Domain
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.502.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("unitarianType", Namespace="qxml")]
    public enum UnitarianType
    {
        
        H,
        
        X,
        
        Z,
        
        CX,
        
        CZ,
        
        RX,
        
        SWAP,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.502.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("hermitianType", Namespace="qxml")]
    public enum HermitianType
    {
        
        X,
        
        SET0,
        
        SET1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.502.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("loopControlType", Namespace="qxml")]
    public enum LoopControlType
    {
        
        ForLoopStart,
        
        ForLoopEnd,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.502.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("conditionControlType", Namespace="qxml")]
    public enum ConditionControlType
    {
        
        If,
        
        ElseIf,
        
        Else,
        
        EndIf,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.502.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("mathRelationType", Namespace="qxml")]
    public enum MathRelationType
    {
        
        Equals,
        
        LowerEquals,
        
        Lower,
        
        Greater,
        
        GreaterEquals,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.502.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("stepType", Namespace="qxml")]
    public enum StepType
    {
        
        Unitarian,
        
        Hermitian,
        
        Placeholder,
        
        Loop,
        
        Condition,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.502.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("steps", Namespace="qxml")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Steps
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Step> step;
        
        [System.Xml.Serialization.XmlElementAttribute("step")]
        public System.Collections.ObjectModel.Collection<Step> Step
        {
            get
            {
                return this.step;
            }
            private set
            {
                this.step = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StepSpecified
        {
            get
            {
                return (this.Step.Count != 0);
            }
        }
        
        public Steps()
        {
            this.step = new System.Collections.ObjectModel.Collection<Step>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.502.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("step", Namespace="qxml")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Step
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("index")]
        public int Index { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public StepType Type { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.502.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("unitarians", Namespace="qxml")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Unitarians
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Unitarian> unitarian;
        
        [System.Xml.Serialization.XmlElementAttribute("unitarian")]
        public System.Collections.ObjectModel.Collection<Unitarian> Unitarian
        {
            get
            {
                return this.unitarian;
            }
            private set
            {
                this.unitarian = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnitarianSpecified
        {
            get
            {
                return (this.Unitarian.Count != 0);
            }
        }
        
        public Unitarians()
        {
            this.unitarian = new System.Collections.ObjectModel.Collection<Unitarian>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.502.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("unitarian", Namespace="qxml")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Unitarian
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("qubits")]
        public string Qubits { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parameters")]
        public string Parameters { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public UnitarianType Type { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("index")]
        public int Index { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.502.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("hermitians", Namespace="qxml")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Hermitians
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Hermitian> hermitian;
        
        [System.Xml.Serialization.XmlElementAttribute("hermitian")]
        public System.Collections.ObjectModel.Collection<Hermitian> Hermitian
        {
            get
            {
                return this.hermitian;
            }
            private set
            {
                this.hermitian = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HermitianSpecified
        {
            get
            {
                return (this.Hermitian.Count != 0);
            }
        }
        
        public Hermitians()
        {
            this.hermitian = new System.Collections.ObjectModel.Collection<Hermitian>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.502.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("hermitian", Namespace="qxml")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Hermitian
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("qubits")]
        public string Qubits { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parameters")]
        public string Parameters { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public HermitianType Type { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("index")]
        public int Index { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.502.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("placeholders", Namespace="qxml")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Placeholders
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Placeholder> placeholder;
        
        [System.Xml.Serialization.XmlElementAttribute("placeholder")]
        public System.Collections.ObjectModel.Collection<Placeholder> Placeholder
        {
            get
            {
                return this.placeholder;
            }
            private set
            {
                this.placeholder = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlaceholderSpecified
        {
            get
            {
                return (this.Placeholder.Count != 0);
            }
        }
        
        public Placeholders()
        {
            this.placeholder = new System.Collections.ObjectModel.Collection<Placeholder>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.502.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("placeholder", Namespace="qxml")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Placeholder
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("index")]
        public int Index { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.502.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("loops", Namespace="qxml")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Loops
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Loop> loop;
        
        [System.Xml.Serialization.XmlElementAttribute("loop")]
        public System.Collections.ObjectModel.Collection<Loop> Loop
        {
            get
            {
                return this.loop;
            }
            private set
            {
                this.loop = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LoopSpecified
        {
            get
            {
                return (this.Loop.Count != 0);
            }
        }
        
        public Loops()
        {
            this.loop = new System.Collections.ObjectModel.Collection<Loop>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.502.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("loop", Namespace="qxml")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Loop
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public LoopControlType Type { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("variable")]
        public string Variable { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("start")]
        public string Start { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("end")]
        public string End { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("increment")]
        public string Increment { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("index")]
        public int Index { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.502.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("conditions", Namespace="qxml")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Conditions
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Condition> condition;
        
        [System.Xml.Serialization.XmlElementAttribute("condition")]
        public System.Collections.ObjectModel.Collection<Condition> Condition
        {
            get
            {
                return this.condition;
            }
            private set
            {
                this.condition = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified
        {
            get
            {
                return (this.Condition.Count != 0);
            }
        }
        
        public Conditions()
        {
            this.condition = new System.Collections.ObjectModel.Collection<Condition>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.502.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("condition", Namespace="qxml")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Condition
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public ConditionControlType Type { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("expression")]
        public string Expression { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("index")]
        public int Index { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.502.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("project", Namespace="qxml")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("project", Namespace="qxml")]
    public partial class Project
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<QuantumCircuit> quantumCircuits;
        
        [System.Xml.Serialization.XmlElementAttribute("quantumCircuits")]
        public System.Collections.ObjectModel.Collection<QuantumCircuit> QuantumCircuits
        {
            get
            {
                return this.quantumCircuits;
            }
            private set
            {
                this.quantumCircuits = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QuantumCircuitsSpecified
        {
            get
            {
                return (this.QuantumCircuits.Count != 0);
            }
        }
        
        public Project()
        {
            this.quantumCircuits = new System.Collections.ObjectModel.Collection<QuantumCircuit>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.502.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("quantumCircuit", Namespace="qxml")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuantumCircuit
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Step> steps;
        
        [System.Xml.Serialization.XmlArrayAttribute("steps")]
        [System.Xml.Serialization.XmlArrayItemAttribute("step", Namespace="qxml")]
        public System.Collections.ObjectModel.Collection<Step> Steps
        {
            get
            {
                return this.steps;
            }
            private set
            {
                this.steps = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StepsSpecified
        {
            get
            {
                return (this.Steps.Count != 0);
            }
        }
        
        public QuantumCircuit()
        {
            this.steps = new System.Collections.ObjectModel.Collection<Step>();
            this.unitarians = new System.Collections.ObjectModel.Collection<Unitarian>();
            this.hermitians = new System.Collections.ObjectModel.Collection<Hermitian>();
            this.placeholders = new System.Collections.ObjectModel.Collection<Placeholder>();
            this.loops = new System.Collections.ObjectModel.Collection<Loop>();
            this.conditions = new System.Collections.ObjectModel.Collection<Condition>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Unitarian> unitarians;
        
        [System.Xml.Serialization.XmlArrayAttribute("unitarians")]
        [System.Xml.Serialization.XmlArrayItemAttribute("unitarian", Namespace="qxml")]
        public System.Collections.ObjectModel.Collection<Unitarian> Unitarians
        {
            get
            {
                return this.unitarians;
            }
            private set
            {
                this.unitarians = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnitariansSpecified
        {
            get
            {
                return (this.Unitarians.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Hermitian> hermitians;
        
        [System.Xml.Serialization.XmlArrayAttribute("hermitians")]
        [System.Xml.Serialization.XmlArrayItemAttribute("hermitian", Namespace="qxml")]
        public System.Collections.ObjectModel.Collection<Hermitian> Hermitians
        {
            get
            {
                return this.hermitians;
            }
            private set
            {
                this.hermitians = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HermitiansSpecified
        {
            get
            {
                return (this.Hermitians.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Placeholder> placeholders;
        
        [System.Xml.Serialization.XmlArrayAttribute("placeholders")]
        [System.Xml.Serialization.XmlArrayItemAttribute("placeholder", Namespace="qxml")]
        public System.Collections.ObjectModel.Collection<Placeholder> Placeholders
        {
            get
            {
                return this.placeholders;
            }
            private set
            {
                this.placeholders = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlaceholdersSpecified
        {
            get
            {
                return (this.Placeholders.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Loop> loops;
        
        [System.Xml.Serialization.XmlArrayAttribute("loops")]
        [System.Xml.Serialization.XmlArrayItemAttribute("loop", Namespace="qxml")]
        public System.Collections.ObjectModel.Collection<Loop> Loops
        {
            get
            {
                return this.loops;
            }
            private set
            {
                this.loops = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LoopsSpecified
        {
            get
            {
                return (this.Loops.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Condition> conditions;
        
        [System.Xml.Serialization.XmlArrayAttribute("conditions")]
        [System.Xml.Serialization.XmlArrayItemAttribute("condition", Namespace="qxml")]
        public System.Collections.ObjectModel.Collection<Condition> Conditions
        {
            get
            {
                return this.conditions;
            }
            private set
            {
                this.conditions = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionsSpecified
        {
            get
            {
                return (this.Conditions.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("description")]
        public string Description { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("size")]
        public string Size { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parameters")]
        public string Parameters { get; set; }
    }
}
